import React from "react";
import SequentCalculusNavigation from "./SequentCalculusNavigation";

function SequentCalculusUses() {

    return (
        <div className="fullPageWithNavigation">  
        <div>
            <SequentCalculusNavigation />
            </div> 
            <div className="fullPageWoutNavigation SequentCalculus">
            <h1>Побудова виведення в секвенційних численнях</h1>
            <p>Опишемо побудову виведення – <b> секвенційного дерева </b> – для заданої секвенції Ʃ
                (скінченної або зліченної). Така побудова розбита на етапи. Вона починається з
                кореня дерева. При цьому кожне застосування секвенційної форми проводиться 
                лише до скінченної множини доступних на даний момент формул. </p>

            <p>На початку етапу виконується <em> крок доступу</em>: до списку доступних додається по
                одній формулі зі списків |– -формул та –| -формул. Якщо відповідний список вичерпано,
                то на подальших кроках доступу додаємо по одній формулі з невичерпаного списку.
                На початку побудови доступна лише пара перших формул списків.<br /> <br />

                Після виконання кожної форми перевіряємо, чи будуть усі <em> листи </em> будованого
                дерева <b> замкненими секвенціями</b>. При появі <em> замкненої секвенції</em>, до неї вже
                незастосовна жодна форма, і процес побудови дерева на цьому шляху обривається. <br /> <br />

                Якщо всі листи побудованого дерева замкнені, то ми отримали <b> замкнене
                секвенційне дерево</b>: процедура завершена позитивно. <br /> <br />

                Якщо ні, то для кожного <em> незамкненого </em> листа робимо наступний крок доступу.
                Нехай після додавання до секвенції-листа нових доступних формул отримана
                секвенція ƞ. Активізуємо всі доступні непримітивні секвенції ƞ. До кожної <em> активної </em>
                формули застосовуємо відповідну <b> секвенційну форму</b>. Після застосування основної
                форми утворені нею формули на даному етапі пасивні, до таких формул на цьому
                етапі основні форми не застосовуються. </p>

            <hr />

            <p>У процесі застосування <em> основних форм </em>(форми типу S¬, Sv, SSФ, ¬¬, v, ¬v, а
                також типу SЕ для БКФЛР, типу SЕS та ES для БКФЛРС) за необхідності виконуємо
                спрощення. Для цього кожен раз при появі відповідної ситуації застосовуємо
                належну допоміжну форму типів <b> CNФ, CUФ, CIФ</b>. Кожен раз при отриманні
                <em> елементарної </em>формули для неї виконуємо форму нормалізації термів (форми типу
                <b> NrTr</b>) до тих пір, поки усі її терми не набудуть <em> нормальної форми</em>. </p>

            <p>Після застосування основної форми формула дезактивується. <b> Секвенції </b> – це
                множини специфікованих формул, тому повторів формул у секвенціях немає. <br />
                При побудові <em> секвенційного дерева </em> можливі такі випадки:
                <ol>
                    <li>Процедуру завершено <b> позитивно</b>, отримано скінченне замкнене дерево;</li>
                    <li>Процедуру завершено <b> негативно</b>, отримано скінченне незамкнене дерево (це
                            можливо для випадку скінченних секвенцій);</li>
                    <li>Процедура <b> не завершується</b>, маємо нескінченне секвенційне дерево (це
                            можливо для випадку нескінченних секвенцій)</li>
                </ol>

                У випадках 2 і 3 у дереві існує <b> скінченний </b> або <b> нескінченний </b> шлях, вершини
                якого не можуть бути <em> замкненими секвенціями</em>. Такий шлях ֆ назвемо
                <b> незамкненим</b>. Кожна з формул секвенції Ʃ зустрінеться на ֆ і стане доступною. 
            </p>

            <hr />
            
            <h1>Відношення логічного наслідку для множин формул</h1>
            <p>Введемо <b> логічний наслідок </b> для множин специфікованих станами формул.
                Специфікована станом формула має вигляд Φ^α, де Φ – формула мови, α – її
                специфікація (відмітка). Тут α∈S, де S – певна множина імен станів світу.
                Нехай M – ТМС із множиною станів світу S, Γ – множина специфікованих
                станами формул, причому ці специфікації утворюють множину S. <br /> <br />
                
                Множина формул Γ узгоджена із ТМС M, якщо задана ін’єкція S у S.
                Нехай ∆ та Γ – множини специфікованих станами формул.
                ∆ є логічним наслідком Γ в узгодженій із ними КНМС M (позн. Γ |=M ∆), якщо
                для всіх d∈^V A із умови Φα(dα)=T для всіх Φ^α∈Γ випливає: неможливо Ψ^β(dβ)=F для
                всіх Ψ^β∈∆. Надалі запис Γ |=M ∆ завжди означатиме узгодженість КНМС M із Γ та ∆.
                ∆ є логічним наслідком Γ (відносно КНМС певного типу), якщо Γ |=M ∆ для всіх
                КНМС M відповідного типу. Те, що ∆ є логічним наслідком Γ, позначимо Γ |= ∆.
                Отже, Γ |≠ ∆ ⇔ існують узгоджена із Γ та ∆ КНМС M та d∈^V A такі:
                для всіх Φ^α∈Γ маємо Φα(dα)=T та для всіх Ψ^β∈∆ маємо Ψβ(dβ)=F.
                
                Розглянемо основні властивості відношення логічного наслідку для множин,
                специфікованих станами формул. Немодальні властивості повторюють відповідні 
                властивості логічного наслідку для множин формул логіки еквітонних предикатів.</p>
            
            <p className="formuls">
                С) Якщо Γ∩∆ ≠ ∅, то Γ |=M ∆. <br /> 
                U) Нехай Γ ⊆ Υ та ∆ ⊆ Σ. Тоді Γ |=M ∆ ⇒ Υ |=M Σ. <br />
                ¬|−) ¬Φ^α, Γ |=M ∆ ⇔ Γ |=M ∆,Φ^α. <br />
                ¬−|) Γ |=M ∆, ¬Φ^α ⇔ Φ^α, Γ |=M ∆. <br />
                ∨|−) Φ∨Ψ^α, Γ |=M ∆ ⇔ Φ^α, Γ |=M ∆ та Ψ^α, Γ |=M ∆. <br />
                ∨−|) Γ |=M ∆, Φ∨Ψ^α ⇔ Γ |=M ∆, Φ^α, Ψ^α. <br />
                RT|−) R(z,x)^(z,v)(Φ)^α, Γ |=M ∆ ⇔ Rx^v(Φ)^α, Γ |=M ∆. <br />
                RT–|) Γ |=M ∆, R(z,x)^(z,v)(Φ)^α ⇔ Γ |=M ∆, Rx^v(Φ)^α. <br />
                ΦN|−) R(z,x)^(y,v)(Φ)^α, Γ |=M ∆ ⇔ Rx^v(Φ)^α, Γ |=M ∆ (за умови у∈µ(Φ)). <br />
                ΦN–|) Γ |=M ∆, R(z,x)^(y,v)(Φ)^α ⇔ Γ |=M ∆, Rx^v(Φ)^α (за умови у∈µ(Φ)). <br />
                R¬|−) Rx^v(¬Φ)^α, Γ |=M ∆ ⇔ ¬Rx^v(Φ)^α, Γ |=M ∆. <br />
                R¬–|) Γ |=M ∆, Rx^v(¬Φ)^α ⇔ Γ |=M ∆, ¬Rx^v(Φ)^α. <br />
                R∨|−) Rx^v(Φ ∨ Ψ)^α, Γ|=M ∆ ⇔ Rx^v(Φ) ∨ Rx^v(Ψ)^α, Γ|=M ∆. <br />
                R∨–|) Γ |=M ∆, Rx^v(Φ ∨ Ψ)^α ⇔ Γ |=M ∆, Rx^v(Φ) ∨ Rx^v(Ψ)^α. <br />
                RR|−) Rx^v(Rw^y(Φ))^α, Γ |=M ∆ ⇔ R(x^v) o (w^y)(Φ)^α, Γ |=M ∆. <br />
                RR–|) Γ |=M ∆, Rx^v(Rw^y(Φ))^α ⇔ Γ |=M ∆, R(x^v) o (w^y)(Φ)^α. <br />
                R∃R|−) R(v,y)^(u,x)(∃xΦ)^α, Γ |=M ∆ Rv^u(∃xΦ)^α, Γ |=M ∆ ( x u ∉ u за визначенням R(v,y)^(u,x)). <br />
                Зокрема, Ry^x(∃xΦ)^α, Γ |=M ∆ ⇔ ∃хΦ^α,Γ |=M ∆. <br />
                R∃R−|) Γ |=M ∆, R(v,y)^(u,x)(∃xΦ)^α ⇔ Γ |=M ∆, Rv^u(∃xΦ)^α (тут x u ∉ u). <br />
                Зокрема, Γ |=M ∆, Ry^x(∃xΦ)^α ⇔ Γ |=M ∆, (∃xΦ)^α. <br />
                Властивості, пов’язані з елімінацією кванторів: <br />
                ∃R|–) Rv^u(∃xΦ)^α, Γ |=M ∆ ⇔ R(v,y)^(u,x)(Φ)^α, Γ |=M ∆ (тут y∈VT, y ∉ nm(Γ,∆,Rv^u(∃xΦ)) ); <br />
                ∃|–) ∃хΦ^α,Γ |=M ∆ ⇔ Ry^x(Φ)^α, Γ |=M ∆ (тут y∈VT та y ∉ nm(Γ,∆,Φ)); <br />
                ∃R–|) Γ |=M ∆, R(v,y)^(u,x)(Φ)^α, Rv^u(∃xΦ)^α ⇔ Γ |=M ∆, Rv^u(∃xΦ)^α; <br />
                ∃–|) Γ |=M ∆, Ry^x(Φ)^α ⇔ Γ |=M ∆, ∃xΦ^α. <br />
                Наведені властивості є семантичною основою для побудови секвенційних числень ТМЛ.
            </p>
            
            </div>
            

        </div>
    )
}

export default SequentCalculusUses